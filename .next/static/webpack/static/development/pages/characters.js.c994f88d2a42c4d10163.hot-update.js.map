{"version":3,"file":"static/webpack/static/development/pages/characters.js.c994f88d2a42c4d10163.hot-update.js","sources":["webpack:///./config.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./pages/characters.js","webpack:///./utils/getCharacters.js"],"sourcesContent":["export const marvelapikey = \"653b529ac4205d4a255ded711beb7102\";\nexport const marvelapihash = \"98d39d1a1d075dbb325c71b1c1f60fd3\";\n","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","import React, { Component, Fragment } from \"react\";\nimport { Row, InputGroup, FormControl } from \"react-bootstrap\";\n\nimport getCharacters from \"../utils/getCharacters\";\nimport DisplayCard from \"../components/Displaycard\";\n\nclass characters extends Component {\n  state = {\n    marvelCharacters: [],\n    loading: true,\n    searchValue: \"\"\n  };\n\n  async componentDidMount() {\n    this.toggleLoader(true);\n    await this.fetchInit();\n    this.toggleLoader(false);\n  }\n\n  toggleLoader = active => {\n    this.setState({ loading: active });\n  };\n\n  fetchInit = async () => {\n    this.toggleLoader(true);\n    const characterList = await getCharacters();\n    this.toggleLoader(false);\n    this.setState({ marvelCharacters: characterList });\n  };\n\n  handleSearchValueChange = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  filter = () => {\n    const { marvelCharacters, searchValue } = this.state;\n    return searchValue.length === 0\n      ? marvelCharacters\n      : marvelCharacters.filter(\n          char =>\n            char &&\n            char.name &&\n            char.name\n              .toLowerCase()\n              .includes(this.state.searchValue.toLowerCase())\n        );\n  };\n\n  renderCards() {\n    const { marvelCharacters } = this.state;\n    if (marvelCharacters.length === 0) return [];\n    const filteredList = this.filter();\n    return filteredList.map(({ thumbnail, name }, i) => {\n      return <DisplayCard key={i} thumbnail={thumbnail} title={name} />;\n    });\n  }\n\n  renderLoader() {\n    const { loading } = this.state;\n    if (!loading) return null;\n    return (\n      <div className=\"Loader\">\n        <div className=\"loader\"></div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Row className=\"row\">\n          <div className=\"searchBar\">\n            <InputGroup size=\"lg\" className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"inputGroup-sizing-lg\">\n                  Search\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                aria-label=\"Large\"\n                onChange={e => this.handleSearchValueChange(e)}\n                value={this.state.searchValue}\n                placeholder=\"Search Your Fav Character\"\n                aria-describedby=\"inputGroup-sizing-sm\"\n              />\n            </InputGroup>\n          </div>\n        </Row>\n        <Row className=\"Scrollable\">\n          {this.renderLoader()}\n          {this.state.marvelCharacters.length > 0 && this.renderCards()}\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nexport default characters;\n","import { marvelapikey, marvelapihash } from \"../config\";\n\nexport default async () => {\n  let list = [];\n  for (let i = 0; i <= 0; i += 100) {\n    const characterList = await fetchCharacters(i);\n    list = [list, ...characterList];\n  }\n  return list;\n};\n\nconst fetchCharacters = async offset => {\n  const response = await fetch(\n    `https://gateway.marvel.com/v1/public/characters?ts=1&apikey=${marvelapikey}&hash=${marvelapihash}&limit=100${\n      offset ? `&offset=${offset}` : \"\"\n    }`\n  );\n  const { data } = await response.json();\n  return data.results;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAWA;AACA;AAAA;AAAA;AACA;AACA;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAOA;AACA;;;;;;;;;;;;;;AAjCA;;AACA;AACA;;AAAA;AACA;;;;;;;;;;;;;;;;;AA+BA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAxFA;AACA;AA0FA;;;;;;;;;;;;;;;;;;;;;ACjGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AALA;AAEA;AAFA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAMA;AANA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}