{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/himanshu/Desktop/Marvel_Universe/pages/characters.js\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { Row, InputGroup, FormControl } from \"react-bootstrap\";\nimport getCharacters from \"../utils/getCharacters\";\nimport DisplayCard from \"../components/Displaycard\";\nimport \"../static/Characters.css\";\n\nclass CharactersPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      marvelCharacters: [],\n      loading: true,\n      searchValue: \"\"\n    });\n\n    _defineProperty(this, \"toggleLoader\", active => {\n      this.setState({\n        loading: active\n      });\n    });\n\n    _defineProperty(this, \"fetchInit\", async () => {\n      this.toggleLoader(true);\n      const characterList = await getCharacters();\n      this.toggleLoader(false);\n      this.setState({\n        marvelCharacters: characterList\n      });\n    });\n\n    _defineProperty(this, \"handleSearchValueChange\", e => {\n      this.setState({\n        searchValue: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"filter\", () => {\n      const {\n        marvelCharacters,\n        searchValue\n      } = this.state;\n      return searchValue.length === 0 ? marvelCharacters : marvelCharacters.filter(char => char && char.name && char.name.toLowerCase().includes(this.state.searchValue.toLowerCase()));\n    });\n  }\n\n  async componentDidMount() {\n    this.toggleLoader(true);\n    await this.fetchInit();\n    this.toggleLoader(false);\n  }\n\n  renderCards() {\n    const {\n      marvelCharacters\n    } = this.state;\n    if (marvelCharacters.length === 0) return [];\n    const filteredList = this.filter();\n    return filteredList.map(({\n      thumbnail,\n      name\n    }, i) => {\n      return __jsx(DisplayCard, {\n        key: i,\n        thumbnail: thumbnail,\n        title: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    });\n  }\n\n  renderLoader() {\n    const {\n      loading\n    } = this.state;\n    if (!loading) return null;\n    return __jsx(\"div\", {\n      className: \"Loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return __jsx(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(Row, {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(InputGroup, {\n      size: \"lg\",\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(InputGroup.Text, {\n      id: \"inputGroup-sizing-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Search\")), __jsx(FormControl, {\n      \"aria-label\": \"Large\",\n      onChange: e => this.handleSearchValueChange(e),\n      value: this.state.searchValue,\n      placeholder: \"Search Your Fav Character\",\n      \"aria-describedby\": \"inputGroup-sizing-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))), __jsx(Row, {\n      className: \"Scrollable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.renderLoader(), this.state.marvelCharacters.length > 0 && this.renderCards()));\n  }\n\n}\n\nexport default CharactersPage;","map":{"version":3,"sources":["/home/himanshu/Desktop/Marvel_Universe/pages/characters.js"],"names":["React","Component","Fragment","Row","InputGroup","FormControl","getCharacters","DisplayCard","CharactersPage","marvelCharacters","loading","searchValue","active","setState","toggleLoader","characterList","e","target","value","state","length","filter","char","name","toLowerCase","includes","componentDidMount","fetchInit","renderCards","filteredList","map","thumbnail","i","renderLoader","render","handleSearchValueChange"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Row, InputGroup, FormControl } from \"react-bootstrap\";\n\nimport getCharacters from \"../utils/getCharacters\";\nimport DisplayCard from \"../components/Displaycard\";\nimport \"../static/Characters.css\";\n\nclass CharactersPage extends Component {\n  state = {\n    marvelCharacters: [],\n    loading: true,\n    searchValue: \"\"\n  };\n\n  async componentDidMount() {\n    this.toggleLoader(true);\n    await this.fetchInit();\n    this.toggleLoader(false);\n  }\n\n  toggleLoader = active => {\n    this.setState({ loading: active });\n  };\n\n  fetchInit = async () => {\n    this.toggleLoader(true);\n    const characterList = await getCharacters();\n    this.toggleLoader(false);\n    this.setState({ marvelCharacters: characterList });\n  };\n\n  handleSearchValueChange = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  filter = () => {\n    const { marvelCharacters, searchValue } = this.state;\n    return searchValue.length === 0\n      ? marvelCharacters\n      : marvelCharacters.filter(\n          char =>\n            char &&\n            char.name &&\n            char.name\n              .toLowerCase()\n              .includes(this.state.searchValue.toLowerCase())\n        );\n  };\n\n  renderCards() {\n    const { marvelCharacters } = this.state;\n    if (marvelCharacters.length === 0) return [];\n    const filteredList = this.filter();\n    return filteredList.map(({ thumbnail, name }, i) => {\n      return <DisplayCard key={i} thumbnail={thumbnail} title={name} />;\n    });\n  }\n\n  renderLoader() {\n    const { loading } = this.state;\n    if (!loading) return null;\n    return (\n      <div className=\"Loader\">\n        <div className=\"loader\"></div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Row className=\"row\">\n          <div className=\"searchBar\">\n            <InputGroup size=\"lg\" className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"inputGroup-sizing-lg\">\n                  Search\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                aria-label=\"Large\"\n                onChange={e => this.handleSearchValueChange(e)}\n                value={this.state.searchValue}\n                placeholder=\"Search Your Fav Character\"\n                aria-describedby=\"inputGroup-sizing-sm\"\n              />\n            </InputGroup>\n          </div>\n        </Row>\n        <Row className=\"Scrollable\">\n          {this.renderLoader()}\n          {this.state.marvelCharacters.length > 0 && this.renderCards()}\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nexport default CharactersPage;\n"]},"metadata":{},"sourceType":"module"}