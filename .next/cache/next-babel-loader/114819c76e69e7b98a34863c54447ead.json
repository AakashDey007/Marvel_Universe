{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { marvelapikey, marvelapihash } from \"../config\";\nexport default\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var list, i, characterList;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          list = [];\n          i = 0;\n\n        case 2:\n          if (!(i <= 0)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 5;\n          return fetchCharacters(i);\n\n        case 5:\n          characterList = _context.sent;\n          list = [list].concat(_toConsumableArray(characterList));\n\n        case 7:\n          i += 100;\n          _context.next = 2;\n          break;\n\n        case 10:\n          return _context.abrupt(\"return\", list);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nvar fetchCharacters =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(offset) {\n    var response, _ref3, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"https://gateway.marvel.com/v1/public/characters?ts=1&apikey=\".concat(marvelapikey, \"&hash=\").concat(marvelapihash, \"&limit=100\").concat(offset ? \"&offset=\".concat(offset) : \"\"));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            _ref3 = _context2.sent;\n            data = _ref3.data;\n            return _context2.abrupt(\"return\", data.results);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function fetchCharacters(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/himanshu/Desktop/Marvel_Universe/utils/getCharacters.js"],"names":["marvelapikey","marvelapihash","list","i","fetchCharacters","characterList","offset","fetch","response","json","data","results"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,WAA5C;AAEA;AAAA;AAAA;AAAA;AAAA,yBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,UAAAA,IADS,GACF,EADE;AAEJC,UAAAA,CAFI,GAEA,CAFA;;AAAA;AAAA,gBAEGA,CAAC,IAAI,CAFR;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAGiBC,eAAe,CAACD,CAAD,CAHhC;;AAAA;AAGLE,UAAAA,aAHK;AAIXH,UAAAA,IAAI,IAAIA,IAAJ,4BAAaG,aAAb,EAAJ;;AAJW;AAEWF,UAAAA,CAAC,IAAI,GAFhB;AAAA;AAAA;;AAAA;AAAA,2CAMND,IANM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;;AASA,IAAME,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAME,MAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCC,KAAK,uEACqCP,YADrC,mBAC0DC,aAD1D,uBAExBK,MAAM,qBAAcA,MAAd,IAAyB,EAFP,EADN;;AAAA;AAChBE,YAAAA,QADgB;AAAA;AAAA,mBAMCA,QAAQ,CAACC,IAAT,EAND;;AAAA;AAAA;AAMdC,YAAAA,IANc,SAMdA,IANc;AAAA,8CAOfA,IAAI,CAACC,OAPU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfP,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import { marvelapikey, marvelapihash } from \"../config\";\n\nexport default async () => {\n  let list = [];\n  for (let i = 0; i <= 0; i += 100) {\n    const characterList = await fetchCharacters(i);\n    list = [list, ...characterList];\n  }\n  return list;\n};\n\nconst fetchCharacters = async offset => {\n  const response = await fetch(\n    `https://gateway.marvel.com/v1/public/characters?ts=1&apikey=${marvelapikey}&hash=${marvelapihash}&limit=100${\n      offset ? `&offset=${offset}` : \"\"\n    }`\n  );\n  const { data } = await response.json();\n  return data.results;\n};\n"]},"metadata":{},"sourceType":"module"}